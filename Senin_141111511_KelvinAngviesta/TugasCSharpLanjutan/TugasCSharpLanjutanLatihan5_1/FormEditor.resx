<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /x/aoymEbCpPbAAAAABJRU5ErkJggg==
</value>
  </data>
</root>