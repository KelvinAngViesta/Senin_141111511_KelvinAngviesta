<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>