<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>